Комплекс программ по взаимодействию с разреженными и плотными матрицами, включая:

1. Генерацию матриц (matrix_generator)
    На вход программе подаются параметры:
    название матрицы, число строк, число столбцов, режим генерации mode, показатель разреженности E, необязательный параметр print, где
    mode = one, all_one, random_integers, random_low, random_high (см. спецификацию условия задачи)
    E такое что, 0 < E <= 1, при E=1 печатается матрица в характерном виде плотных матриц
К примеру:
./matrix_generator A 100 50 random_low 0.4525 print
./matrix_generator B 23 6 all_one 0.9689

2. Построитель индекса, т.е. .dot файла для отображения дерева поиска, показывающего как хранится матрица в виде бинарного АВЛ-дерева (indexer)
./indexer {название существующего файла без расширения}

3. Отображатель индекса в консоле (index_draw)
    Подаётся название .dot-файла без расширения и один из режимов печатания:
    right-root-left
    left-root-right
    root-left-right
    levels

4. Умножитель матриц (multiplyer)
    Подаётся название результирующей матрицы, "погрешность" вычисления, по очереди названия .mtr-файлов без расширения, последовательное умножение которых будет возвращено (такие файлы обязаны существовать, размерности матриц должны быть учтены)
./multiplyer Res 0.25 A B C D

5. Конвертеры из разреженного представления в плотное и наоборот (sparse2dense и dense2sparse соответственно)
    sparse2dense: подаётся название существующего .mtr-файла и название результирующего .mtr-файла
    dense2sparse:  подаётся название существующего .mtr-файла, название результирующего .mtr-файла и "погрешность" вычисления

Особенности:
1. Каждая матрица в памяти компьютера хранится как бинарное дерева поиска, в котором ключами являются индексы элементов, сами элементы - строго ненулевые
2. Программы работают только с файлами, находящимися в каталоге catalogue

В программе реализованы дополнительные модули:

1. matrixes <- содержит в себе ключевые функции для работы с файлами:
    а) выделение из строк текстового документа только нужной информации (с учётом комментариев)
    б) запись всех узлов в .dot-файла
    в) построение отношений между узлами в .dot-файле
    г) запись дерева поиска в .dot-файл
    д) чтение матрицы из .mtr-файла в дерево поиска
    е) запись дерева поиска (матрицы) в .mtr-файл в разреженном виде
    ж) освобождение памяти, занятого деревом поиска во время работы программы

2. avl_tree <- полноценный модуль построения бинарных АВЛ-деревьев, реализовано:
    а) сравнение ключей
    б) балансировка деревьев (малое левое и малое правое вращения)
    в) вставка элемента в дерево
    г) поиск по ключу и возвращение значения, если таковое имеется